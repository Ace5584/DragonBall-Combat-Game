/** TIMER NOTES **/

import pygame
pygame.init()

screen = pygame.display.set_mode((450, 600))

timer_font = pygame.font.SysFont("comicsans", 38)
timer_sec = 60
timer_text = timer_font.render("01:00", True, (255, 255, 255))

# USEREVENTS are just integers
# you can only have like 31 of them or something arbitrarily low
timer = pygame.USEREVENT
pygame.time.set_timer(timer, 1000)    # sets timer with USEREVENT and delay in milliseconds

running = True
while running:
    screen.fill((0, 0, 0))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == timer:    # checks for timer event
            if timer_sec > 0:
                timer_sec -= 1
                timer_text = timer_font.render("00:%02d" % timer_sec, True, (255, 255, 255))
            else:
                pygame.time.set_timer(timer, 0)    # turns off timer event

# add another "if timer_sec > 0" here if you want the timer to disappear after reaching 0
    screen.blit(timer_text, (300, 20))
    pygame.display.update()
pygame.quit()

/** TIMER NOTES **/

/* MANUAL TIMER NOTES */
start_ticks = pygame.time.get_ticks()
seconds = start_ticks / 1000
reset_time = True
temp_time = 0
shield_timer = 0

if x == 0:
    start_ticks = pygame.time.get_ticks()
    seconds = self.start_ticks / 1000
    if reset_time:
        temp_time = self.seconds
        reset_time = False
    else:
        reset_time = False
        shield_timer = int(temp_time + 3) - int(self.seconds)
        if int(seconds) == int(temp_time + 3):
            temp2[2] = shield
            shield_bar = tuple(self.temp2)
            shield_timer = int(temp_time + 3) - int(seconds)
else:
    self.reset_time = True